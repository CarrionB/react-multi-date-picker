{"version":3,"sources":["webpack://date-picker/./src/docs/multiple_range.js","webpack://date-picker/./src/pages/multiple-range.js"],"names":["Doc","language","otherProps","localeImport","useState","DateObject","set","day","values","setValues","title","description","code","jsx","value","onChange","multiple","range","dateSeparator","multipleRangeSeparator","onlyMonthPicker","onlyYearPicker","Multiple","pageContext","doc"],"mappings":"8LAGe,SAASA,EAAT,GAAsD,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAClD,GAA4BC,cAAS,CACnC,CACE,IAAIC,KAAWH,GAAYI,IAAI,CAAEC,IAAK,IACtC,IAAIF,KAAWH,GAAYI,IAAI,CAAEC,IAAK,KAExC,CACE,IAAIF,KAAWH,GAAYI,IAAI,CAAEC,IAAK,IACtC,IAAIF,KAAWH,GAAYI,IAAI,CAAEC,IAAK,MAExC,CACE,IAAIF,KAAWH,GAAYI,IAAI,CAAEC,IAAK,KACtC,IAAIF,KAAWH,GAAYI,IAAI,CAAEC,IAAK,QAXnCC,EAAP,KAAeC,EAAf,KAqFA,MAAO,CAtEO,CACZC,MAAO,wBACPC,YAAa,wBACbC,KAAST,EAAL,kWAcJU,IACE,gBAAC,IAAD,eACEC,MAAON,EACPO,SAAUN,EACVO,UAAQ,EACRC,OAAK,GACDf,KAKQ,CAChBQ,MAAO,mBACPC,YAAa,gCACbC,KAAK,sDAGsB,OAAbX,EAAoB,SAAW,UAHzC,qCAMJY,IACE,gBAAC,KAAD,eACEG,UAAQ,EACRC,OAAK,EACLC,cAA4B,OAAbjB,EAAoB,OAAS,OAC5CkB,uBAAuB,KACnBjB,KAKU,CAClBQ,MAAO,oCACPC,YAAa,8BACbC,KAAST,EAAL,0DAKJU,IAAK,gBAAC,KAAD,eAAYO,iBAAe,EAACJ,UAAQ,EAACC,OAAK,GAAKf,KAGnC,CACjBQ,MAAO,mCACPC,YAAa,6BACbC,KAAST,EAAL,yDAKJU,IAAK,gBAAC,KAAD,eAAYQ,gBAAc,EAACL,UAAQ,EAACC,OAAK,GAAKf,MClFxC,SAASoB,EAAT,GAAoC,IAC3CrB,EAD0C,EAAfsB,YACJtB,UAAY,KAEzC,OAAO,gBAAC,IAAD,CAAQA,SAAUA,EAAUuB,IAAKA","file":"component---src-pages-multiple-range-js-75dd793a3e52d59daa45.js","sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker, { Calendar, DateObject } from \"../../../build\";\n\nexport default function Doc({ language, otherProps, localeImport }) {\n  const [values, setValues] = useState([\n    [\n      new DateObject(otherProps).set({ day: 1 }),\n      new DateObject(otherProps).set({ day: 3 }),\n    ],\n    [\n      new DateObject(otherProps).set({ day: 6 }),\n      new DateObject(otherProps).set({ day: 12 }),\n    ],\n    [\n      new DateObject(otherProps).set({ day: 23 }),\n      new DateObject(otherProps).set({ day: 27 }),\n    ],\n  ]);\n\n  const range = {\n    title: \"Multiple Range Picker\",\n    description: \"multiple_range_picker\",\n    code: `${localeImport}const [values, setValues] = useState([\n  [new DateObject().set({ day: 1 }), new DateObject().set({ day: 3 })],\n  [new DateObject().set({ day: 6 }), new DateObject().set({ day: 12 })],\n  [new DateObject().set({ day: 23 }), new DateObject().set({ day: 27 })],\n])\n.\n.\n.\n<Calendar\n  value={values}\n  onChange={setValues}\n  multiple\n  range\n/>`,\n    jsx: (\n      <Calendar\n        value={values}\n        onChange={setValues}\n        multiple\n        range\n        {...otherProps}\n      />\n    ),\n  };\n\n  const separator = {\n    title: \"Custom Separator\",\n    description: \"multiple_range_date_separator\",\n    code: `<DatePicker\n  multiple\n  range\n  dateSeparator=${language === \"fa\" ? '\" تا \"' : '\" to \"'}\n  multipleRangeSeparator=\"&\"\n/>`,\n    jsx: (\n      <DatePicker\n        multiple\n        range\n        dateSeparator={language === \"fa\" ? \" تا \" : \" to \"}\n        multipleRangeSeparator=\"&\"\n        {...otherProps}\n      />\n    ),\n  };\n\n  const monthPicker = {\n    title: \"Multiple Range in onlyMonthPicker\",\n    description: \"multiple_range_month_picker\",\n    code: `${localeImport}<DatePicker\n  onlyMonthPicker\n  multiple\n  range\n/>`,\n    jsx: <DatePicker onlyMonthPicker multiple range {...otherProps} />,\n  };\n\n  const yearPicker = {\n    title: \"Multiple Range in onlyYearPicker\",\n    description: \"multiple_range_year_picker\",\n    code: `${localeImport}<DatePicker\n  onlyYearPicker\n  multiple\n  range\n/>`,\n    jsx: <DatePicker onlyYearPicker multiple range {...otherProps} />,\n  };\n\n  return [range, separator, monthPicker, yearPicker];\n}\n","import React from \"react\";\nimport Layout from \"../components/layout/layout\";\nimport doc from \"../docs/multiple_range\";\n\nexport default function Multiple({ pageContext }) {\n  const language = pageContext.language || \"en\";\n\n  return <Layout language={language} doc={doc} />;\n}\n"],"sourceRoot":""}