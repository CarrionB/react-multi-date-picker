{"version":3,"sources":["webpack://date-picker/./src/docs/v2.x/types.js","webpack://date-picker/./src/pages/v2.x/types.js"],"names":["Doc","language","otherProps","calendar","locale","calendarPosition","singleDescription","title","jsx","input","code","type","inputIcon","value","render","stringDate","openCalendar","onClick","CustomComponent","description","CustomInput","multiple","CustomMultipleInput","range","eachDaysInRange","CustomRangeInput","stringDates","from","to","onFocus","readOnly","join","this","props","React","handleValueChange","onChange","Types","pageContext","doc"],"mappings":"wMAGe,SAASA,EAAT,GAA4B,IAAbC,EAAY,EAAZA,SACtBC,EACS,OAAbD,EACI,GACA,CACEE,SAAU,UACVC,OAAQ,KACRC,iBAAkB,gBAGpBC,EAAoB,CACxBC,MAAO,QACPC,IACE,0BACE,6CACA,wCACA,oCACA,kCACA,sCAKAC,EAAQ,CACZF,MAAO,QACPG,KAAK,mCAGLF,IAAK,gBAAC,KAAD,eAAYG,KAAK,SAAYT,KAG9BU,EAAY,CAChBL,MAAO,aACPG,KAAK,yCAGLF,IAAK,gBAAC,KAAD,eAAYG,KAAK,cAAiBT,KA0KzC,MAAO,CACLI,EACAG,EAzKa,CACbF,MAAO,SACPG,KAAK,oCAGLF,IAAK,gBAAC,KAAD,eAAYG,KAAK,UAAaT,KAsKnCU,EAnKW,CACXL,MAAO,OACPG,KAAK,mCAGLF,IAAK,gBAAC,KAAD,eAAYG,KAAK,QAAWT,KAGZ,CACrBK,MAAO,oBACPG,KAAK,6MAWLF,IACE,gBAAC,KAAD,eACEK,MAAM,aACNF,KAAK,SACLG,OAAQ,SAACC,EAAYC,GACnB,OAAO,0BAAQC,QAASD,GAAeD,KAErCb,KAKc,CACtBK,MAAO,qBACPG,KAAK,uUAqBLF,IACE,gBAAC,KAAD,eACEK,MAAM,aACNF,KAAK,SACLG,OAAQ,gBAACI,EAAD,OACJhB,KAKmB,CAC3BK,MAAO,iBACPY,YAAa,eACbT,KAAK,2SAgBLF,IAAK,gBAAC,KAAD,eAAYG,KAAK,SAASG,OAAQ,gBAACM,EAAD,OAAqBlB,KAElC,CAC1BK,MAAO,mBACPY,YAAa,kBAEE,CACfZ,MAAO,yBACPG,KAAK,2SAiBLF,IACE,gBAAC,KAAD,eACEa,UAAQ,EACRV,KAAK,SACLG,OAAQ,gBAACQ,EAAD,OACJpB,KAKI,CACZK,MAAO,sBACPG,KAAK,0LAMQ,OAAbT,EAAA,gEANI,0NA0BJO,IACE,gBAAC,KAAD,eACEe,OAAK,EACLC,iBAAe,EACfb,KAAK,SACLG,OAAQ,gBAACW,EAAD,OACJvB,MAmBV,SAASuB,EAAT,GAA0D,IAA9BT,EAA6B,EAA7BA,aAAcU,EAAe,EAAfA,YACpCC,EAAOD,EAAY,IAAM,GACzBE,EAAKF,EAAY,IAAM,GACvBb,EACFc,GAAQC,EACS,OAAb3B,EAAA,QACU0B,EADV,QACsBC,EADtB,MAEQD,EAFR,QAEoBC,EACpBD,EAEN,OAAO,yBAAOE,QAASb,EAAcH,MAAOA,EAAOiB,UAAQ,KAI/D,SAASR,EAAT,GAA6D,IAA9BN,EAA6B,EAA7BA,aAAcU,EAAe,EAAfA,YAC3C,OACE,yBAAOG,QAASb,EAAcH,MAAOa,EAAYK,KAAK,MAAOD,UAAQ,I,IAInEZ,E,6FACJJ,OAAA,WACE,OACE,0BAAQG,QAASe,KAAKC,MAAMjB,cAAegB,KAAKC,MAAMlB,a,GAH9BmB,aAQ9B,SAASd,EAAT,GAAuE,IAAhDJ,EAA+C,EAA/CA,aAAcD,EAAiC,EAAjCA,WAAYoB,EAAqB,EAArBA,kBAC/C,OACE,yBACEN,QAASb,EACTH,MAAOE,EACPqB,SAAUD,IC5PD,SAASE,EAAT,GAAiC,IACxCpC,EADuC,EAAfqC,YACDrC,UAAY,KAEzC,OAAO,gBAAC,IAAD,CAAQA,SAAUA,EAAUsC,IAAKA","file":"component---src-pages-v-2-x-types-js-866db8d6eea249b60384.js","sourcesContent":["import React from \"react\";\nimport DatePicker from \"react-multi-date-picker\";\n\nexport default function Doc({ language }) {\n  const otherProps =\n    language === \"en\"\n      ? {}\n      : {\n          calendar: \"persian\",\n          locale: \"fa\",\n          calendarPosition: \"bottom-right\",\n        };\n\n  const singleDescription = {\n    title: \"Types\",\n    jsx: (\n      <ul>\n        <li>input (default)</li>\n        <li>input-icon</li>\n        <li>button</li>\n        <li>icon</li>\n        <li>custom</li>\n      </ul>\n    ),\n  };\n\n  const input = {\n    title: \"Input\",\n    code: `<DatePicker \n  type=\"input\"\n/>`,\n    jsx: <DatePicker type=\"input\" {...otherProps} />,\n  };\n\n  const inputIcon = {\n    title: \"Input-Icon\",\n    code: `<DatePicker \n  type=\"input-icon\" \n/>`,\n    jsx: <DatePicker type=\"input-icon\" {...otherProps} />,\n  };\n\n  const button = {\n    title: \"Button\",\n    code: `<DatePicker \n  type=\"button\"\n/>`,\n    jsx: <DatePicker type=\"button\" {...otherProps} />,\n  };\n\n  const icon = {\n    title: \"Icon\",\n    code: `<DatePicker \n  type=\"icon\" \n/>`,\n    jsx: <DatePicker type=\"icon\" {...otherProps} />,\n  };\n\n  const customFunction = {\n    title: \"Custom (function)\",\n    code: `<DatePicker\n  value=\"2020/10/19\"\n  type=\"custom\"\n  render={(stringDate, openCalendar) => {\n    return (\n      <button onClick={openCalendar}>\n        {stringDate}\n      </button>\n    )\n  }}\n/>`,\n    jsx: (\n      <DatePicker\n        value=\"2020/10/19\"\n        type=\"custom\"\n        render={(stringDate, openCalendar) => {\n          return <button onClick={openCalendar}>{stringDate}</button>;\n        }}\n        {...otherProps}\n      />\n    ),\n  };\n\n  const customComponent = {\n    title: \"Custom (component)\",\n    code: `import React from \"react\"\n.\n.\n.\nclass CustomComponent extends React.Component {\n  render() {\n    return (\n      <button onClick={this.props.openCalendar}>\n        {this.props.stringDate}\n      </button >\n    )\n  }\n}\n.\n.\n.\n<DatePicker\n  value=\"2020/10/19\"\n  type=\"custom\"\n  render={<CustomComponent />}\n/>`,\n    jsx: (\n      <DatePicker\n        value=\"2020/10/19\"\n        type=\"custom\"\n        render={<CustomComponent />}\n        {...otherProps}\n      />\n    ),\n  };\n\n  const customComponentInput = {\n    title: \"Custom (input)\",\n    description: \"custom_input\",\n    code: `import React from \"react\"\n\nfunction CustomInput({ openCalendar, stringDate, handleValueChange }) {\n  return (\n    <input\n      onFocus={openCalendar}\n      value={stringDate}\n      onChange={handleValueChange}\n    />\n  )\n}\n\n<DatePicker\n  type=\"custom\"\n  render={<CustomInput />}\n/>`,\n    jsx: <DatePicker type=\"custom\" render={<CustomInput />} {...otherProps} />,\n  };\n  const multipleDescription = {\n    title: \"Multiple & Range\",\n    description: \"multiple_range\",\n  };\n  const multiple = {\n    title: \"Custom (multiple mode)\",\n    code: `import React from \"react\"\n\nfunction CustomMultipleInput({openCalendar, stringDates}) {\n  return (\n    <input\n      onFocus={openCalendar}\n      value={stringDates.join(\", \")}\n      readOnly\n    />\n  )\n}\n\n<DatePicker\n  multiple\n  type=\"custom\"\n  render={<CustomMultipleInput />}\n/>`,\n    jsx: (\n      <DatePicker\n        multiple\n        type=\"custom\"\n        render={<CustomMultipleInput />}\n        {...otherProps}\n      />\n    ),\n  };\n\n  const range = {\n    title: \"Custom (range mode)\",\n    code: `import React from \"react\"\n\nfunction CustomRangeInput({openCalendar, stringDates}) {\n  let from = stringDates[0] || \"\"\n  let to = stringDates[1] || \"\"\n  let value = from && to ? ${\n    language === \"en\"\n      ? `\"from \" + from + \", to \" + to`\n      : `\"از \" + from + \"، تا \" + to\"`\n  } : from\n  \n  return (\n    <input\n      onFocus={openCalendar}\n      value={value}\n      readOnly\n    />\n  )\n}\n\n<DatePicker\n  range\n  eachDaysInRange\n  type=\"custom\"\n  render={<CustomRangeInput />}\n/>`,\n    jsx: (\n      <DatePicker\n        range\n        eachDaysInRange\n        type=\"custom\"\n        render={<CustomRangeInput />}\n        {...otherProps}\n      />\n    ),\n  };\n\n  return [\n    singleDescription,\n    input,\n    button,\n    inputIcon,\n    icon,\n    customFunction,\n    customComponent,\n    customComponentInput,\n    multipleDescription,\n    multiple,\n    range,\n  ];\n\n  function CustomRangeInput({ openCalendar, stringDates }) {\n    let from = stringDates[0] || \"\";\n    let to = stringDates[1] || \"\";\n    let value =\n      from && to\n        ? language === \"en\"\n          ? `from ${from}, to ${to}`\n          : `از ${from}، تا ${to}`\n        : from;\n\n    return <input onFocus={openCalendar} value={value} readOnly />;\n  }\n}\n\nfunction CustomMultipleInput({ openCalendar, stringDates }) {\n  return (\n    <input onFocus={openCalendar} value={stringDates.join(\", \")} readOnly />\n  );\n}\n\nclass CustomComponent extends React.Component {\n  render() {\n    return (\n      <button onClick={this.props.openCalendar}>{this.props.stringDate}</button>\n    );\n  }\n}\n\nfunction CustomInput({ openCalendar, stringDate, handleValueChange }) {\n  return (\n    <input\n      onFocus={openCalendar}\n      value={stringDate}\n      onChange={handleValueChange}\n    />\n  );\n}\n","import React from \"react\";\nimport Layout from \"../../components/layout/layout\";\nimport doc from \"../../docs/v2.x/types\";\n\nexport default function Types({ pageContext }) {\n  const language = pageContext.language || \"en\";\n\n  return <Layout language={language} doc={doc} />;\n}\n"],"sourceRoot":""}